import java.util.Random;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {
        // Part A: Create an array and shuffle it
        int[] array = {1, 2, 3, 4, 5, 6, 7};
        shuffleArray(array);
        System.out.println("Shuffled array: ");
        for (int num : array) {
            System.out.print(num + " ");
        }
        System.out.println();

        // Part B: Convert Roman numeral to integer
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a Roman numeral: ");
        String roman = scanner.nextLine();
        int integerValue = romanToInt(roman);
        System.out.println("Integer value: " + integerValue);

        // Part C: Check if the input is a pangram
        System.out.print("Enter a sentence: ");
        String sentence = scanner.nextLine();
        boolean isPangram = isPangram(sentence);
        System.out.println("Is the sentence a pangram? " + isPangram);
    }

    // Function to shuffle an array
    public static void shuffleArray(int[] array) {
        Random rand = new Random();
        for (int i = array.length - 1; i > 0; i--) {
            int j = rand.nextInt(i + 1);
            int temp = array[i];
            array[i] = array[j];
            array[j] = temp;
        }
    }

    // Function to convert Roman numeral to integer
    public static int romanToInt(String s) {
        int result = 0;
        int[] values = new int[256];
        values['I'] = 1;
        values['V'] = 5;
        values['X'] = 10;
        values['L'] = 50;
        values['C'] = 100;
        values['D'] = 500;
        values['M'] = 1000;
        
        for (int i = 0; i < s.length(); i++) {
            if (i > 0 && values[s.charAt(i)] > values[s.charAt(i - 1)]) {
                result += values[s.charAt(i)] - 2 * values[s.charAt(i - 1)];
            } else {
                result += values[s.charAt(i)];
            }
        }
        return result;
    }

    // Function to check if a sentence is a pangram
    public static boolean isPangram(String sentence) {
        boolean[] alphabet = new boolean[26];
        int index = 0;
        
        for (int i = 0; i < sentence.length(); i++) {
            char ch = Character.toLowerCase(sentence.charAt(i));
            if (ch >= 'a' && ch <= 'z') {
                index = ch - 'a';
                alphabet[index] = true;
            }
        }

        for (boolean present : alphabet) {
            if (!present) {
                return false;
            }
        }
        return true;
    }
}
